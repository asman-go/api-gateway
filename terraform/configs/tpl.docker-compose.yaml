services:
  postgres:
    image: postgres:alpine
    container_name: ${POSTGRES_LOCAL_HOST}
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_REMOTE_PORT}:${POSTGRES_LOCAL_PORT}
    volumes:
      - /etc/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /home/${DEFAULT_USER}/data-disk/${DEVICE_NAME}:/var/lib/postgresql/data
    logging:
      # Fluent Bit понимает логи в этом формате.
      driver: fluentd
      options:
        # Fluent Bit слушает логи на порту ${FLUENT_BIT_PORT}.
        fluentd-address: localhost:${FLUENT_BIT_PORT}
        # Теги используются для маршрутизации логов.
        tag: app.postgres
    depends_on:
      - fluentbit

  gateway:
    image: ${ASMAN_API_GATEWAY_IMAGE}
    container_name: ${GW_LOCAL_HOST}
    restart: always
    environment:
      ENVIRONMENT: ${ASMAN_ENVIRONMENT}

      POSTGRES_HOST: ${POSTGRES_LOCAL_HOST}
      POSTGRES_PORT: ${POSTGRES_LOCAL_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

      USER_API_KEY: ${USER_API_KEY}
      ADMIN_API_KEY: ${ADMIN_API_KEY}

      FACEBOOK_CLIENT_ID: ${FACEBOOK_CLIENT_ID}
      FACEBOOK_CLIENT_SECRET: ${FACEBOOK_CLIENT_SECRET}
      FACEBOOK_WEBHOOK_VERIFICATION_TOKEN: ${FACEBOOK_WEBHOOK_VERIFICATION_TOKEN}

    expose:
      # Для nginx, но наружу не будем открывать через security groups
      - ${GW_LOCAL_PORT}
    depends_on:
      - postgres
      - fluentbit
    logging:
      # Fluent Bit понимает логи в этом формате.
      driver: fluentd
      options:
        # Fluent Bit слушает логи на порту ${FLUENT_BIT_PORT}.
        fluentd-address: localhost:${FLUENT_BIT_PORT}
        # Теги используются для маршрутизации логов.
        tag: app.gateway

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/nginx.default.conf:/etc/nginx/conf.d/default.conf
      - ${CERT_FULLCHAIN_PATH}:/etc/nginx/certs/fullchain.pem
      - ${CERT_PRIVKEY_PATH}:/etc/nginx/certs/privkey.pem
    logging:
      # Fluent Bit понимает логи в этом формате.
      driver: fluentd
      options:
        # Fluent Bit слушает логи на порту ${FLUENT_BIT_PORT}.
        fluentd-address: localhost:${FLUENT_BIT_PORT}
        # Теги используются для маршрутизации логов.
        tag: app.nginx
    depends_on:
      - fluentbit

  fluentbit:
    # https://yandex.cloud/ru/docs/logging/tutorials/coi-fluent-bit-logging
    container_name: ${FLUENT_BIT_HOST}
    image: cr.yandex/yc/fluent-bit-plugin-yandex:v1.0.3-fluent-bit-1.8.6
    # expose:
    #   - ${FLUENT_BIT_PORT}
    #   - ${FLUENT_BIT_PORT}/udp
    ports:
      - ${FLUENT_BIT_PORT}:${FLUENT_BIT_PORT}
      - ${FLUENT_BIT_PORT}:${FLUENT_BIT_PORT}/udp
    restart: always
    environment:
      YC_GROUP_ID: ${YC_GROUP_ID}
    volumes:
      - /etc/fluentbit/fluentbit.conf:/fluent-bit/etc/fluent-bit.conf
      # - /etc/fluentbit/parsers.conf:/fluent-bit/etc/parsers.conf

x-yc-disks:
  - device_name: ${DEVICE_NAME}
    fs_type: ext4
    host_path: /home/${DEFAULT_USER}/data-disk
